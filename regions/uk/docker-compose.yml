version: '3.9'
services:
  reverse-proxy:
    image: traefik:v3.1
    command:
      - --providers.docker=true
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
    ports: [ "80:80", "443:443" ]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
      - ./letsencrypt:/letsencrypt

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: rmy
      POSTGRES_USER: rmy
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    volumes: [ "dbdata:/var/lib/postgresql/data" ]

  redis:
    image: redis:7-alpine

  app:
    build: ./app
    env_file: .env
    depends_on: [ db ]
    labels:
      - traefik.enable=true
      - traefik.http.routers.app.rule=Host(`uk.rmy.app`)
      - traefik.http.routers.app.entrypoints=websecure
      - traefik.http.routers.app.tls.certresolver=letsencrypt
      - traefik.http.services.app.loadbalancer.server.port=8000

  admin:
    build: ./admin
    env_file: .env
    depends_on: [ db ]
    labels:
      - traefik.enable=true
      - traefik.http.routers.admin.rule=Host(`uk.rmy.app`) && PathPrefix(`/admin`)
      - traefik.http.routers.admin.entrypoints=websecure
      - traefik.http.routers.admin.tls.certresolver=letsencrypt
      - traefik.http.services.admin.loadbalancer.server.port=8001

  opensearch:
    image: opensearchproject/opensearch:2
    environment:
      - discovery.type=single-node
      - plugins.security.disabled=false
      - OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_PASSWORD}
    ulimits:
      memlock: { soft: -1, hard: -1 }
    # internal only

  dashboards:
    image: opensearchproject/opensearch-dashboards:2
    volumes:
      - ./dashboards/opensearch_dashboards.yml:/usr/share/opensearch-dashboards/config/opensearch_dashboards.yml:ro
    environment:
      - OPENSEARCH_PASSWORD=${OPENSEARCH_PASSWORD}
    depends_on: [ opensearch ]
    # internal only â€” no ports, no traefik labels

volumes:
  dbdata: {}
